name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    types: [opened, synchronize]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: üèó Setup Pnpm
        uses: pnpm/action-setup@v2.0.1
        with:
          version: 7.x

      - name: üèó Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: "pnpm"

      - name: üèó Setup Expo
        uses: expo/expo-github-action@v7
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: ‚ôªÔ∏è Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: üì¶ Install dependencies (with cache)
        run: pnpm install --no-frozen-lockfile

      - name: Linting code
        run: pnpm lint

      - name: Test
        run: pnpm test

      - name: ‚ö°Ô∏è Build apps and packages
        run: pnpm build

      - name: Deploy to Netlify
        uses: netlify/actions/cli@master
        with:
          args: deploy --dir=apps/web/.next --prod
          secrets: '["NETLIFY_ACCESS_TOKEN", "NETLIFY_SITE_ID"]'
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_ACCESS_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

      # - name: üöÄ Build mobile
      #   working-directory: apps/mobile
      #   run: eas build --non-interactive --wait --profile development --platform android
